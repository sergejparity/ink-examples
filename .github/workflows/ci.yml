name: continuous-integration/examples

on:
  push:
    branches:
      - main
    tags:
        - v*
    paths-ignore:
      - '**.gitignore'
      - '.images/**'
      - '**README.md'

  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.gitignore'
      - '.images/**'
      - '**README.md'


jobs:
  prepare_matrix:
    name: prepare matrix
    runs-on: ubuntu-latest
    env:
      # values for matrix
      platform: '[\"ubuntu-latest\", \"macos-latest\"]'
      toolchain: '[\"stable\"]'
    outputs:
      MATRIX: ${{ steps.build_matrix.outputs.MATRIX }}
      CHANGED_CONTRACTS: ${{ steps.contracts_to_process.outputs.CHANGED_CONTRACTS }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: recursive

      - name: Diff in simple contracts
        id: CHANGED_CONTRACTS
        uses: tj-actions/changed-files@v39
        with:
          dir_names: "true"
          dir_names_max_depth: 1
          files_ignore: |
            .github/**
            **.gitignore
            *.md
            multi-contract-caller/**
            upgradeable-contracts/**
          json: true
          write_output_files: true

      - name: Diff in multi and upgradable contracts
        id: CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS
        uses: tj-actions/changed-files@v39
        with:
          dir_names: "true"
          dir_names_max_depth: 2
          files: |
            multi-contract-caller/**
            upgradeable-contracts/**
          files_ignore: |
            **.gitignore
            *.md
          json: true
          write_output_files: true

      - name: List changed contracts
        run: |
          for file in ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }}; do
            echo $file >> ./contracts.txt
          done
          echo "Total changed:  ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files_count }};"
          echo "---"
          echo ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }};
          echo "contracts.txt content:"
          cat contracts.txt
          echo "all_changed_files:"
          cat .github/outputs/all_changed_files.json

      - name: List files produced by changed-files
        run: ls .github/outputs


      - name: List changed multi and upgradeable contracts
        run: |
          echo " ]" >> contracts.txt
          echo "Total changed:  ${{ steps.CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS.outputs.all_changed_files_count }};"
          echo ${{ steps.CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS.outputs.all_changed_files }};

      - name: Full list for tests
        id: contracts_to_process
        run: |
          echo ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }}
          echo ${{ steps.CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS.outputs.all_changed_files }}
          echo "CHANGED_CONTRACTS={${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }}}" >> $GITHUB_OUTPUT
          echo $CHANGED_CONTRACTS

      - name: Construct Matrix
        id: build_matrix
        run: |
          echo ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }}
          echo ${{ steps.CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS.outputs.all_changed_files }}
          ALL_CHANGED_CONTRACTS=$(jq -s 'add' \
                                <(echo "${{ toJson(steps.CHANGED_CONTRACTS.outputs.all_changed_files) }}") \
                                <(echo "${{ toJson(steps.CHANGED_MULTI_AND_UPGRADEABLE_CONTRACTS.outputs.all_changed_files) }}"))

        # echo $ALL_CHANGED_CONTRACTS

        # echo "MATRIX={\"platform\":${{env.platform}},\
        #                 \"toolchain\":${{env.toolchain}},\
        #                 \"contract\":$(echo ${{ steps.CHANGED_CONTRACTS.outputs.all_changed_files }}/]/, )\
        #                 $ALL_CHANGED_CONTRACTS}"\
        #                 >> $GITHUB_OUTPUT


      - name: Check value written
        run: |
          # echo ${{ steps.contracts_to_process.outputs.CHANGED_CONTRACTS }}
          echo "all_changed_files:"
          cat .github/outputs/all_changed_files.json
          echo
          echo "----------"
          echo ${{ steps.build_matrix.outputs.MATRIX }}
          echo "JSON"
          echo ${{ toJson(steps.build_matrix.outputs.MATRIX) }}

  display_outputs:
    name: show
    needs: prepare_matrix
    runs-on: ubuntu-latest

    steps:
      - name: SHOWCHANGEDCONTRACTS
        run: |
          echo "Hey";
          echo ${{ needs.prepare_matrix.outputs.CHANGED_CONTRACTS }};
          echo ${{ toJson(needs.prepare_matrix.outputs.MATRIX) }}



        # echo ${{ fromJson(needs.prepare_matrix.outputs.CHANGED_CONTRACTS) }};
        # echo "fromJson CHANGED_CONTRACTS from prepare_matrix";


  check:
    name: examples
    needs: prepare_matrix
    env:
      RUST_BACKTRACE: full

    strategy:
      matrix:
        ${{ fromJson(needs.prepare_matrix.outputs.MATRIX) }}
        # platform:
        #   - ubuntu-latest
        #   - macos-latest
        # toolchain:
        #   - stable

        # # ${{ needs.prepare_matrix.outputs.contracts2 }}

        # contract: ${{ needs.prepare_matrix.outputs.CHANGED_CONTRACTS }}

          # ["erc721","psp22-extension"]
          # [erc721, psp22-extension]
          # ${{ needs.prepare_matrix.outputs.CONTRACTS_JSON }}
          # ${{ fromJson(needs.prepare_matrix.outputs.CONTRACTS_JSON) }}
          # ${{ needs.prepare_matrix.outputs.CONTRACTS }}
          # - basic-contract-caller
          # - call-runtime
          # - conditional-compilation
          # - contract-terminate
          # - custom-allocator
          # - custom-environment
          # - dns
          # - e2e-call-runtime
          # - erc20
          # - erc721
          # - erc1155
          # - flipper
          # - incrementer
          # - multi-contract-caller
          # - multi-contract-caller/accumulator
          # - multi-contract-caller/adder
          # - multi-contract-caller/subber
          # - multisig
          # - payment-channel
          # - psp22-extension
          # - rand-extension
          # - trait-dyn-cross-contract-calls
          # - trait-erc20
          # - trait-flipper
          # - trait-incrementer
          # - upgradeable-contracts/delegator
          # - upgradeable-contracts/set-code-hash
          # - vesting
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Test solution
        run: |
          echo "Processing ${{ matrix.contract }} on ${{ matrix.platform }}"
          echo "--"
          echo ${{ needs.prepare_matrix.outputs.CHANGED_CONTRACTS }}


  #     - name: Checkout sources & submodules
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 1
  #         submodules: recursive

  #     - name: Install toolchain
  #       id: toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: ${{ matrix.toolchain }}
  #         components: rust-src
  #         override: true

  #     - name: Rust Cache
  #       uses: Swatinem/rust-cache@v2.7.0
  #       with:
  #         cache-on-failure: true
  #         workspaces: ${{ matrix.contract }}
  #         key: ${{ matrix.contract }}

  #     - name: Install `cargo-contract` `main`
  #       uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
  #       with:
  #         crate: cargo-contract
  #         git: https://github.com/paritytech/cargo-contract.git
  #         cache-key: ${{ matrix.platform }}

  #     - name: Install cargo-dylint
  #       uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
  #       with:
  #         crate: cargo-dylint
  #         version: 1

  #     - name: Install dylint-link
  #       uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
  #       with:
  #         crate: dylint-link
  #         version: 1

  #     - name: Download and run latest `substrate-contracts-node` binary
  #       if: runner.os == 'Linux'
  #       run: |
  #         curl -L -o substrate-contracts-node.zip 'https://gitlab.parity.io/parity/mirrors/substrate-contracts-node/-/jobs/artifacts/main/download?job=build-linux' && \
  #         unzip substrate-contracts-node.zip && \
  #         chmod +x artifacts/substrate-contracts-node-linux/substrate-contracts-node &&
  #         ./artifacts/substrate-contracts-node-linux/substrate-contracts-node -linfo,runtime::contracts=debug  2>&1 | tee /tmp/contracts-node.log &

  #     - name: Download and run latest `substrate-contracts-node` binary
  #       if: runner.os == 'macOS'
  #       run: |
  #           curl -L -o substrate-contracts-node.zip 'https://gitlab.parity.io/parity/mirrors/substrate-contracts-node/-/jobs/artifacts/main/download?job=build-mac' && \
  #           unzip substrate-contracts-node.zip && \
  #           chmod +x artifacts/substrate-contracts-node-mac/substrate-contracts-node &&
  #           ./artifacts/substrate-contracts-node-mac/substrate-contracts-node -linfo,runtime::contracts=debug  2>&1 | tee /tmp/contracts-node.log &

  #     - name: Install and run latest `substrate-contracts-node` binary
  #       if: runner.os == 'Windows'
  #       run: |
  #           cargo install contracts-node --git https://github.com/paritytech/substrate-contracts-node.git --force --locked && \
  #           substrate-contracts-node -lruntime::contracts=debug  2>&1 | tee /tmp/contracts-node.log &

  #     - name: Output versions
  #       run: |
  #           cargo -vV
  #           cargo contract --version

  #     - name: Build ${{ matrix.contract }} on ${{ matrix.platform }}-${{ matrix.toolchain }}
  #       if: runner.os != 'Windows'
  #       run: cargo contract build --verbose --manifest-path=${{ matrix.contract }}/Cargo.toml;

  #     - name: Test ${{ matrix.contract }} on ${{ matrix.platform }}-${{ matrix.toolchain }}
  #       if: runner.os != 'Windows'
  #       run: cargo test --verbose --manifest-path=${{ matrix.contract }}/Cargo.toml;